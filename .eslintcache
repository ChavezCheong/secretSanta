
[{"/Users/jenniferguo/projects/secretsanta/src/index.js":"1","/Users/jenniferguo/projects/secretsanta/src/App.js":"2","/Users/jenniferguo/projects/secretsanta/src/reportWebVitals.js":"3","/Users/jenniferguo/projects/secretsanta/src/Routes/Routes.js":"4","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterRegister/ShelterRegister.js":"5","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterLogin/ShelterLogin.js":"6","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterDash/ShelterDash.js":"7","/Users/jenniferguo/projects/secretsanta/src/Pages/Components/NavBar/NavBar.js":"8","/Users/jenniferguo/projects/secretsanta/src/Pages/Homepage/Homepage.js":"9","/Users/jenniferguo/projects/secretsanta/src/Pages/Components/ReceiverCard/ReceiverCard.js":"10"},{"size":2143,"mtime":1607211128716,"results":"11","hashOfConfig":"12"},{"size":156,"mtime":1607211128711,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607201742662,"results":"14","hashOfConfig":"12"},{"size":721,"mtime":1607213611754,"results":"15","hashOfConfig":"12"},{"size":4627,"mtime":1607211128715,"results":"16","hashOfConfig":"12"},{"size":2813,"mtime":1607211128714,"results":"17","hashOfConfig":"12"},{"size":1016,"mtime":1607211128713,"results":"18","hashOfConfig":"12"},{"size":1728,"mtime":1607214076367,"results":"19","hashOfConfig":"12"},{"size":1512,"mtime":1607220291737,"results":"20","hashOfConfig":"12"},{"size":1403,"mtime":1607219717091,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rkew80",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jenniferguo/projects/secretsanta/src/index.js",[],"/Users/jenniferguo/projects/secretsanta/src/App.js",[],["46","47"],"/Users/jenniferguo/projects/secretsanta/src/reportWebVitals.js",[],"/Users/jenniferguo/projects/secretsanta/src/Routes/Routes.js",[],"/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterRegister/ShelterRegister.js",["48","49"],"import React, {Component} from 'react';\nimport './ShelterRegister.css';\nimport {firebaseConnect} from 'react-redux-firebase'\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {Link, Redirect} from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { Grid } from 'semantic-ui-react';\n\nclass ShelterRegister extends Component {\n  constructor(props) {\n    super(props);\n    //store user account info from text inputs\n    this.state = {\n      shelterName: '',\n      city: '',\n      state: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n    };\n  }\n\n  //register account with firebase\n  register = async () => {\n    console.log('registering')\n    const credentials = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    const profile = {\n      shelterName: this.state.shelterName,\n      email: this.state.email,\n      city: this.state.city,\n      state: this.state.state,\n    }\n\n    try {\n      await this.props.firebase.createUser(credentials, profile);\n    }\n    catch (error) {\n      this.setState({error: error.message});\n    }\n  };\n\n  registerCheck = () => {\n    if ((this.state.password === this.state.passwordConfirm)\n      && this.state.shelterName.trim()\n      && this.state.city.trim()\n      && this.state.state.trim()\n      && this.state.email.trim()\n      && this.state.password.trim()) {\n      this.register();\n    }\n  }\n\n  //Event Change Handler Method for text inputs\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value, error: ''});\n  }\n\n\n  render() {\n    // if (this.props.isLoggedIn) {\n    //   return <Redirect to=\"/dash\" />\n    // }\n\n    //passwords do not match error message\n    if ((this.state.password !== this.state.passwordConfirm) && (this.state.passconfirm !== \"Passwords do not match.\")) {\n      this.setState({passconfirm: \"Passwords do not match.\"})\n    } else if (this.state.password === this.state.passwordConfirm && (this.state.passconfirm !== \"\")) {\n      this.setState({passconfirm: \"\"})\n    }\n\n    var disabled = !this.state.email.trim()\n    || !this.state.shelterName.trim()\n    || !this.state.state.trim()\n    || !this.state.city.trim()\n    || !this.state.password.trim()\n    || !this.state.passwordConfirm.trim()\n    || this.state.password !== this.state.passwordConfirm;\n\n    return(\n      <div className=\"register raleway\">\n        <div className=\"area\" >\n          <div className=\"contentr\">\n\n              <div className='title cinzel'>\n              Secret Santa\n              </div>\n              <p style={{color: 'white'}}>Register your shelter to start receiving holiday donations!</p>\n\n              <div style={{color: 'white', marginBottom: '1em'}}>{this.state.error}</div>\n              <div style={{color: 'white', marginBottom: '1em'}}>{this.state.passconfirm}</div>\n\n              <div className=\"form\">\n                <Form>\n                  <Form.Group>\n                      <Form.Control name=\"email\" type=\"email\" placeholder=\"Email*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"shelterName\" type=\"text\" placeholder=\"Shelter Name*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"city\" type=\"text\" placeholder=\"City*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"state\" type=\"text\" placeholder=\"State*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"password\" type=\"password\" placeholder=\"Enter Password*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"passwordConfirm\" type=\"password\" placeholder=\"Confirm Password*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Button variant=\"dark\" onClick={this.registerCheck} disabled={disabled}>\n                    Let's get started!\n                  </Button>\n                </Form>\n              </div>\n              <br/>\n              <Link className=\"to-login\" to=\"/login\">Already Registered? Login!</Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {isLoggedIn: state.firebase.auth.uid};\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps))(ShelterRegister);\n","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterLogin/ShelterLogin.js",["50"],"import React, {Component} from 'react';\nimport './ShelterLogin.css';\nimport { Form, Button } from 'react-bootstrap';\nimport {Redirect, Link} from 'react-router-dom';\nimport {firebaseConnect} from 'react-redux-firebase'\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport { Grid } from 'semantic-ui-react';\n\nclass ShelterLogin extends Component {\n  constructor(props) {\n    super(props);\n    //store user account info from text inputs\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  login = async () => {\n    console.log('login')\n    const credentials = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    try {\n      await this.props.firebase.login(credentials);\n    } catch (error) {\n      this.setState({error: error.message});\n    }\n  };\n\n  //key enter change handler\n  handleKeyPress = event => {\n    //enter\n    if (event.keyCode === 13) {\n      this.login();\n    }\n  }\n\n  //change handler\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value, error: ''});\n  }\n\n  //listens for key press\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  render() {\n    if (this.props.isLoggedIn) {\n      return <Redirect to=\"/dash\"/ >;\n    }\n\n    var disabled = !this.state.email.trim() || !this.state.password.trim()\n\n    return(\n      <div className=\"login raleway\">\n        <div className=\"area\" >\n          <div className=\"contentr\">\n            <div className='title cinzel'>\n            Secret Santa\n            </div>\n            <p style={{color: 'white'}}>Welcome Back!</p>\n              <div style={{color: 'red', fontWeight: 'bold', marginBottom: '1em'}}>{this.state.error}</div>\n              <div className=\"form\">\n                <Form>\n                  <Form.Group>\n                      <Form.Control name=\"email\" type=\"email\" placeholder=\"Email*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"password\" type=\"password\" placeholder=\"Enter Password*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Button variant=\"dark\" onClick={this.login} disabled={disabled}>\n                    Login\n                  </Button>\n                </Form>\n              </div>\n              <br/>\n              <Link className=\"to-login\" to=\"/register\">New Here? Register!</Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {isLoggedIn: state.firebase.auth.uid};\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps))(ShelterLogin);\n","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterDash/ShelterDash.js",["51","52","53","54"],"import React, {Component} from 'react';\nimport './ShelterDash.css';\nimport NavBar from '../Components/NavBar/NavBar'\nimport { Form, Button } from 'react-bootstrap';\nimport {Redirect, Link} from 'react-router-dom';\nimport {firebaseConnect} from 'react-redux-firebase'\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport { Grid } from 'semantic-ui-react';\n\nclass ShelterDash extends Component {\n  constructor(props) {\n    super(props);\n    //store user account info from text inputs\n    this.state = {\n    };\n  }\n\n  //change handler\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value, error: ''});\n  }\n\n  render() {\n    if (!this.props.isLoggedIn) {\n      return <Redirect to=\"/register\"/ >;\n    }\n\n    return(\n      <div className=\"dash\">\n        <NavBar/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {isLoggedIn: state.firebase.auth.uid};\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps))(ShelterDash);\n","/Users/jenniferguo/projects/secretsanta/src/Pages/Components/NavBar/NavBar.js",["55"],"/Users/jenniferguo/projects/secretsanta/src/Pages/Homepage/Homepage.js",["56","57","58","59","60"],"/Users/jenniferguo/projects/secretsanta/src/Pages/Components/ReceiverCard/ReceiverCard.js",["61","62","63","64","65","66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":6,"column":15,"nodeType":"74","messageId":"75","endLine":6,"endColumn":23},{"ruleId":"72","severity":1,"message":"76","line":8,"column":10,"nodeType":"74","messageId":"75","endLine":8,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":8,"column":10,"nodeType":"74","messageId":"75","endLine":8,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":14},{"ruleId":"72","severity":1,"message":"78","line":4,"column":16,"nodeType":"74","messageId":"75","endLine":4,"endColumn":22},{"ruleId":"72","severity":1,"message":"79","line":5,"column":19,"nodeType":"74","messageId":"75","endLine":5,"endColumn":23},{"ruleId":"72","severity":1,"message":"76","line":9,"column":10,"nodeType":"74","messageId":"75","endLine":9,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":12,"column":12,"nodeType":"82","messageId":"83","endLine":12,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":14},{"ruleId":"72","severity":1,"message":"78","line":5,"column":16,"nodeType":"74","messageId":"75","endLine":5,"endColumn":22},{"ruleId":"72","severity":1,"message":"73","line":6,"column":9,"nodeType":"74","messageId":"75","endLine":6,"endColumn":17},{"ruleId":"72","severity":1,"message":"79","line":6,"column":19,"nodeType":"74","messageId":"75","endLine":6,"endColumn":23},{"ruleId":"72","severity":1,"message":"76","line":10,"column":10,"nodeType":"74","messageId":"75","endLine":10,"endColumn":14},{"ruleId":"72","severity":1,"message":"79","line":2,"column":9,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},{"ruleId":"72","severity":1,"message":"84","line":9,"column":9,"nodeType":"74","messageId":"75","endLine":9,"endColumn":24},{"ruleId":"72","severity":1,"message":"85","line":10,"column":9,"nodeType":"74","messageId":"75","endLine":10,"endColumn":16},{"ruleId":"72","severity":1,"message":"86","line":11,"column":9,"nodeType":"74","messageId":"75","endLine":11,"endColumn":16},{"ruleId":"72","severity":1,"message":"87","line":14,"column":9,"nodeType":"74","messageId":"75","endLine":14,"endColumn":12},{"ruleId":"88","severity":1,"message":"89","line":26,"column":11,"nodeType":"90","endLine":26,"endColumn":87},{"ruleId":"72","severity":1,"message":"91","line":43,"column":7,"nodeType":"74","messageId":"75","endLine":43,"endColumn":22},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'firebaseConnect' is defined but never used.","'connect' is defined but never used.","'compose' is defined but never used.","'uid' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'mapStateToProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]

