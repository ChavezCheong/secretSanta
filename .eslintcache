[{"C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\index.js":"1","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\App.js":"2","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\reportWebVitals.js":"3","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Routes\\Routes.js":"4","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\ShelterRegister\\ShelterRegister.js":"5","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\ShelterLogin\\ShelterLogin.js":"6","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\ShelterAdminPayments\\ShelterAdminPayments.js":"7","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\ShelterAdminPeople\\ShelterAdminPeople.js":"8","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\Homepage\\Homepage.js":"9","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\Components\\NavBar\\NavBar.js":"10","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\Components\\ReceiverCard\\ReceiverCard.js":"11","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\Payments\\Payments.js":"12"},{"size":2224,"mtime":1607225546091,"results":"13","hashOfConfig":"14"},{"size":167,"mtime":1607211960183,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1607211960189,"results":"16","hashOfConfig":"14"},{"size":1146,"mtime":1607245298634,"results":"17","hashOfConfig":"14"},{"size":4764,"mtime":1607216277616,"results":"18","hashOfConfig":"14"},{"size":2982,"mtime":1607248568486,"results":"19","hashOfConfig":"14"},{"size":293,"mtime":1607225546089,"results":"20","hashOfConfig":"14"},{"size":191,"mtime":1607219949607,"results":"21","hashOfConfig":"14"},{"size":1562,"mtime":1607246713843,"results":"22","hashOfConfig":"14"},{"size":1777,"mtime":1607233850847,"results":"23","hashOfConfig":"14"},{"size":1453,"mtime":1607232481190,"results":"24","hashOfConfig":"14"},{"size":2517,"mtime":1607250578356,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ifbn31",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\index.js",[],["54","55"],"C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\App.js",[],"C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\reportWebVitals.js",[],"C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Routes\\Routes.js",[],"C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\ShelterRegister\\ShelterRegister.js",["56","57"],"import React, {Component} from 'react';\r\nimport './ShelterRegister.css';\r\nimport {firebaseConnect} from 'react-redux-firebase'\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Grid } from 'semantic-ui-react';\r\n\r\nclass ShelterRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //store user account info from text inputs\r\n    this.state = {\r\n      shelterName: '',\r\n      city: '',\r\n      state: '',\r\n      email: '',\r\n      password: '',\r\n      passwordConfirm: '',\r\n    };\r\n  }\r\n\r\n  //register account with firebase\r\n  register = async () => {\r\n    console.log('registering')\r\n    const credentials = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const profile = {\r\n      shelterName: this.state.shelterName,\r\n      email: this.state.email,\r\n      city: this.state.city,\r\n      state: this.state.state,\r\n    }\r\n\r\n    try {\r\n      await this.props.firebase.createUser(credentials, profile);\r\n    }\r\n    catch (error) {\r\n      this.setState({error: error.message});\r\n    }\r\n  };\r\n\r\n  registerCheck = () => {\r\n    if ((this.state.password === this.state.passwordConfirm)\r\n      && this.state.shelterName.trim()\r\n      && this.state.city.trim()\r\n      && this.state.state.trim()\r\n      && this.state.email.trim()\r\n      && this.state.password.trim()) {\r\n      this.register();\r\n    }\r\n  }\r\n\r\n  //Event Change Handler Method for text inputs\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value, error: ''});\r\n  }\r\n\r\n\r\n  render() {\r\n    // if (this.props.isLoggedIn) {\r\n    //   return <Redirect to=\"/dash\" />\r\n    // }\r\n\r\n    //passwords do not match error message\r\n    if ((this.state.password !== this.state.passwordConfirm) && (this.state.passconfirm !== \"Passwords do not match.\")) {\r\n      this.setState({passconfirm: \"Passwords do not match.\"})\r\n    } else if (this.state.password === this.state.passwordConfirm && (this.state.passconfirm !== \"\")) {\r\n      this.setState({passconfirm: \"\"})\r\n    }\r\n\r\n    var disabled = !this.state.email.trim()\r\n    || !this.state.shelterName.trim()\r\n    || !this.state.state.trim()\r\n    || !this.state.city.trim()\r\n    || !this.state.password.trim()\r\n    || !this.state.passwordConfirm.trim()\r\n    || this.state.password !== this.state.passwordConfirm;\r\n\r\n    return(\r\n      <div className=\"register raleway\">\r\n        <div className=\"area\" >\r\n          <div className=\"contentr\">\r\n\r\n              <div className='title cinzel'>\r\n              Secret Santa\r\n              </div>\r\n              <p style={{color: 'white'}}>Register your shelter to start receiving holiday donations!</p>\r\n\r\n              <div style={{color: 'white', marginBottom: '1em'}}>{this.state.error}</div>\r\n              <div style={{color: 'white', marginBottom: '1em'}}>{this.state.passconfirm}</div>\r\n\r\n              <div className=\"form\">\r\n                <Form>\r\n                  <Form.Group>\r\n                      <Form.Control name=\"email\" type=\"email\" placeholder=\"Email*\" onChange={this.handleChange} required />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                      <Form.Control name=\"shelterName\" type=\"text\" placeholder=\"Shelter Name*\" onChange={this.handleChange} required />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                      <Form.Control name=\"city\" type=\"text\" placeholder=\"City*\" onChange={this.handleChange} required />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                      <Form.Control name=\"state\" type=\"text\" placeholder=\"State*\" onChange={this.handleChange} required />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                      <Form.Control name=\"password\" type=\"password\" placeholder=\"Enter Password*\" onChange={this.handleChange} required />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                      <Form.Control name=\"passwordConfirm\" type=\"password\" placeholder=\"Confirm Password*\" onChange={this.handleChange} required />\r\n                  </Form.Group>\r\n                  <Button variant=\"dark\" onClick={this.registerCheck} disabled={disabled}>\r\n                    Let's get started!\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n              <br/>\r\n              <Link className=\"to-login\" to=\"/login\">Already Registered? Login!</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {isLoggedIn: state.firebase.auth.uid};\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps))(ShelterRegister);\r\n","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\ShelterLogin\\ShelterLogin.js",["58"],"C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\ShelterAdminPayments\\ShelterAdminPayments.js",[],"C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\ShelterAdminPeople\\ShelterAdminPeople.js",[],"C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\Homepage\\Homepage.js",["59","60","61","62","63"],"C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\Components\\NavBar\\NavBar.js",["64"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './NavBar.css';\r\nimport logo from '../../../Images/logo.svg';\r\nimport { Navbar, Nav, Button } from 'react-bootstrap';\r\nimport {firebaseConnect } from 'react-redux-firebase';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\n\r\nconst nav = (props) => {\r\n  const user = props.user;\r\n  if (user == 'giver') {\r\n    return (\r\n      <Navbar className=\"darkblue topbar raleway\" variant=\"light\" expand=\"lg\">\r\n        <Navbar.Brand><Link className='home' to='/'><img className=\"logoep\" src={logo} height='50em' alt='logo'/></Link></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <Button variant='light'><Link className='home' to='/register' style={{color: 'black'}}>For Shelters</Link></Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n  else {\r\n    return(\r\n      <Navbar className=\"darkblue topbar raleway\" variant=\"light\" expand=\"lg\">\r\n        <Navbar.Brand><Link className='home' to='/home'><img className=\"logoep\" src={logo} height='50em' alt='logo'/></Link></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <Button variant='light' onClick={() => props.firebase.logout()}>Logout</Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    isLoggedIn: state.firebase.auth.uid,\r\n    profile: state.firebase.profile\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps))(nav);\r\n","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\Components\\ReceiverCard\\ReceiverCard.js",["65","66","67","68","69","70","71"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './ReceiverCard.css';\r\nimport pic0 from '../../../Images/snowman.svg';\r\nimport pic1 from '../../../Images/penguin.svg';\r\nimport pic2 from '../../../Images/reindeer.svg';\r\nimport pic3 from '../../../Images/nutcracker.svg';\r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\nimport {firebaseConnect } from 'react-redux-firebase';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\n\r\nconst receivercard = (props) => {\r\n  const uid = props.uid;\r\n  const name = props.name;\r\n  const bio = props.bio;\r\n\r\n  const arr = [pic0, pic1, pic2, pic3];\r\n  const rand = Math.floor(Math.random() * Math.floor(4));\r\n  const img = arr[rand];\r\n\r\n  return (\r\n    <Card bg='light' className='receivercard'>\r\n      <Row>\r\n        <Col xs={2}>\r\n          <img src={img} style={{margin: '1em', borderRadius: '50%', width: '10em'}}/>\r\n        </Col>\r\n        <Col>\r\n          <Card.Body>\r\n            <h1 className='cinzel'>{name}</h1>\r\n            <hr/>\r\n            <Card.Title>\r\n              <p className='raleway'>{bio}</p>\r\n            </Card.Title>\r\n            <Button variant=\"dark\">View Profile Here</Button>\r\n          </Card.Body>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    isLoggedIn: state.firebase.auth.uid,\r\n    profile: state.firebase.profile\r\n  };\r\n}\r\n\r\nexport default receivercard;\r\n","C:\\Users\\chave\\desktop\\software\\HackDuke 2020\\secretsanta\\src\\Pages\\Payments\\Payments.js",["72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":6,"column":15,"nodeType":"79","messageId":"80","endLine":6,"endColumn":23},{"ruleId":"77","severity":1,"message":"81","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":14},{"ruleId":"77","severity":1,"message":"82","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":14},{"ruleId":"77","severity":1,"message":"83","line":5,"column":16,"nodeType":"79","messageId":"80","endLine":5,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":6,"column":9,"nodeType":"79","messageId":"80","endLine":6,"endColumn":17},{"ruleId":"77","severity":1,"message":"84","line":6,"column":19,"nodeType":"79","messageId":"80","endLine":6,"endColumn":23},{"ruleId":"77","severity":1,"message":"81","line":10,"column":10,"nodeType":"79","messageId":"80","endLine":10,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":12,"column":12,"nodeType":"87","messageId":"88","endLine":12,"endColumn":14},{"ruleId":"77","severity":1,"message":"84","line":2,"column":9,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"89","line":9,"column":9,"nodeType":"79","messageId":"80","endLine":9,"endColumn":24},{"ruleId":"77","severity":1,"message":"90","line":10,"column":9,"nodeType":"79","messageId":"80","endLine":10,"endColumn":16},{"ruleId":"77","severity":1,"message":"91","line":11,"column":9,"nodeType":"79","messageId":"80","endLine":11,"endColumn":16},{"ruleId":"77","severity":1,"message":"92","line":14,"column":9,"nodeType":"79","messageId":"80","endLine":14,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":26,"column":11,"nodeType":"95","endLine":26,"endColumn":87},{"ruleId":"77","severity":1,"message":"96","line":43,"column":7,"nodeType":"79","messageId":"80","endLine":43,"endColumn":22},{"ruleId":null,"fatal":true,"severity":2,"message":"97","line":21,"column":11},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'firebaseConnect' is defined but never used.","'connect' is defined but never used.","'compose' is defined but never used.","'uid' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'mapStateToProps' is assigned a value but never used.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 19 | \u001b[39m        }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m    }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 21 | \u001b[39m    \u001b[36mconst\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m        wrapperProps\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m        getCardImageProps\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 | \u001b[39m        getCardNumberProps\u001b[33m,\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]