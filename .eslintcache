[{"/Users/jenniferguo/projects/secretsanta/src/index.js":"1","/Users/jenniferguo/projects/secretsanta/src/App.js":"2","/Users/jenniferguo/projects/secretsanta/src/reportWebVitals.js":"3","/Users/jenniferguo/projects/secretsanta/src/Routes/Routes.js":"4","/Users/jenniferguo/projects/secretsanta/src/Pages/Homepage/Homepage.js":"5","/Users/jenniferguo/projects/secretsanta/src/Pages/Components/ReceiverCard/ReceiverCard.js":"6","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterAdminPeople/ShelterAdminPeople.js":"7","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterAdminPayments/ShelterAdminPayments.js":"8","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterLogin/ShelterLogin.js":"9","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterRegister/ShelterRegister.js":"10","/Users/jenniferguo/projects/secretsanta/src/Pages/Components/NavBar/NavBar.js":"11","/Users/jenniferguo/projects/secretsanta/src/Pages/ErrorPage/ErrorPage.js":"12","/Users/jenniferguo/projects/secretsanta/src/Pages/Components/SubNavBar/SubNavBar.js":"13","/Users/jenniferguo/projects/secretsanta/src/Pages/Components/GiftsReceived/GiftsReceived.js":"14","/Users/jenniferguo/projects/secretsanta/src/Pages/Components/CreateCard/CreateCard.js":"15","/Users/jenniferguo/projects/secretsanta/src/Pages/Payments/Payments.js":"16","/Users/jenniferguo/projects/secretsanta/src/Pages/PaymentResult/PaymentResult.js":"17","/Users/jenniferguo/projects/secretsanta/src/Pages/ViewProfile/ViewProfile.js":"18"},{"size":2151,"mtime":1607268281045,"results":"19","hashOfConfig":"20"},{"size":752,"mtime":1607280752394,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1607201742662,"results":"22","hashOfConfig":"20"},{"size":1674,"mtime":1607282565090,"results":"23","hashOfConfig":"20"},{"size":2021,"mtime":1607281154584,"results":"24","hashOfConfig":"20"},{"size":1569,"mtime":1607281284029,"results":"25","hashOfConfig":"20"},{"size":2135,"mtime":1607281117329,"results":"26","hashOfConfig":"20"},{"size":1940,"mtime":1607283514297,"results":"27","hashOfConfig":"20"},{"size":2830,"mtime":1607280752397,"results":"28","hashOfConfig":"20"},{"size":4632,"mtime":1607280752398,"results":"29","hashOfConfig":"20"},{"size":1724,"mtime":1607268281039,"results":"30","hashOfConfig":"20"},{"size":981,"mtime":1607268281040,"results":"31","hashOfConfig":"20"},{"size":979,"mtime":1607280752395,"results":"32","hashOfConfig":"20"},{"size":1044,"mtime":1607283562499,"results":"33","hashOfConfig":"20"},{"size":5208,"mtime":1607280752394,"results":"34","hashOfConfig":"20"},{"size":6049,"mtime":1607283763916,"results":"35","hashOfConfig":"20"},{"size":1492,"mtime":1607274561701,"results":"36","hashOfConfig":"20"},{"size":3285,"mtime":1607283027067,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"rkew80",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},"/Users/jenniferguo/projects/secretsanta/src/index.js",[],["86","87"],"/Users/jenniferguo/projects/secretsanta/src/App.js",[],"/Users/jenniferguo/projects/secretsanta/src/reportWebVitals.js",[],"/Users/jenniferguo/projects/secretsanta/src/Routes/Routes.js",[],"/Users/jenniferguo/projects/secretsanta/src/Pages/Homepage/Homepage.js",["88","89","90","91","92","93","94","95"],"import React, {Component} from 'react';\nimport './Homepage.css';\nimport NavBar from '../Components/NavBar/NavBar';\nimport ReceiverCard from '../Components/ReceiverCard/ReceiverCard';\nimport { Form, Button } from 'react-bootstrap';\nimport {Redirect, Link} from 'react-router-dom';\nimport {firebaseConnect, isLoaded, isEmpty} from 'react-redux-firebase'\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport { Grid } from 'semantic-ui-react';\n\nclass Homepage extends Component {\n  constructor(props) {\n    super(props);\n    //store user account info from text inputs\n    this.state = {\n\n    };\n  }\n\n  //change handler\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value, error: ''});\n  }\n\n  render() {\n\n    if (!isLoaded(this.props.shelters)) {\n      return <div>Loading...</div>\n    }\n\n    const shelters = this.props.shelters;\n    var peopleList = (<p className='raleway'>Everyone's holiday wishes are fulfilled!</p>)\n\n    if (shelters) {\n      peopleList = [];\n      Object.keys(shelters).map((shelterid, shelterindex) => {\n        var shelter = shelters[shelterid];\n        Object.keys(shelter).map((personid, personindex) => {\n          var person = shelter[personid];\n          peopleList.push( <ReceiverCard name={person.name} bio={person.bio} uid={personid} shelterid={shelterid}/>)\n        });\n      });\n    }\n\n    return (\n      <div className=\"homepage\">\n        <NavBar user='giver'/>\n        <br/>\n        <h4 className='center raleway'>\n        Welcome to Secret Santa!\n        <br/>\n        Thank you for your generosity. Click on any person to view their holiday wishlist. </h4>\n        <hr/>\n        {peopleList}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.firebase.auth.uid,\n    shelters: state.firebase.data['shelters'],\n  };\n};\n\nexport default compose(\n  firebaseConnect( props => {\n    return [\n      {path: `/shelters`, storeAs: 'shelters'},\n    ];\n  }),\n  connect(mapStateToProps))(Homepage);\n","/Users/jenniferguo/projects/secretsanta/src/Pages/Components/ReceiverCard/ReceiverCard.js",["96","97","98","99","100"],"import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './ReceiverCard.css';\nimport pic0 from '../../../Images/snowman.svg';\nimport pic1 from '../../../Images/penguin.svg';\nimport pic2 from '../../../Images/reindeer.svg';\nimport pic3 from '../../../Images/nutcracker.svg';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport {firebaseConnect } from 'react-redux-firebase';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\n\nconst receivercard = (props) => {\n  const uid = props.uid;\n  const name = props.name;\n  const bio = props.bio;\n  const shelterid = props.shelterid;\n\n  const arr = [pic0, pic1, pic2, pic3];\n  const rand = Math.floor(Math.random() * Math.floor(4));\n  const img = arr[rand];\n\n  //exact path=\"/ViewProfile/:recipientid\"\n\n  return (\n    <Card bg='light' className='receivercard'>\n      <Row>\n        <Col xs={2}>\n          <img src={img} style={{margin: '1em', borderRadius: '50%', width: '10em'}}/>\n        </Col>\n        <Col>\n          <Card.Body>\n            <h1 className='cinzel'>{name}</h1>\n            <hr/>\n            <Card.Title>\n              <p className='raleway'>{bio}</p>\n            </Card.Title>\n            <Button variant=\"dark\"><Link to={`/ViewProfile/${shelterid}/${uid}`} className='raleway profileLink'>View Profile Here</Link></Button>\n          </Card.Body>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    isLoggedIn: state.firebase.auth.uid,\n    profile: state.firebase.profile\n  };\n}\n\nexport default receivercard;\n","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterAdminPeople/ShelterAdminPeople.js",["101","102"],"import React, {Component} from 'react';\nimport NavBar from '../Components/NavBar/NavBar.js';\nimport SubNavBar from '../Components/SubNavBar/SubNavBar.js';\nimport CreateCard from '../Components/CreateCard/CreateCard.js';\nimport ReceiverCard from '../Components/ReceiverCard/ReceiverCard.js';\nimport {Link, Redirect} from 'react-router-dom';\nimport {firebaseConnect, isLoaded, isEmpty} from 'react-redux-firebase'\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\n\nclass ShelterAdminPeople extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n\n    if (!this.props.uid) {\n      return <Redirect to=\"/\"/>;\n    }\n\n    // return loading screen if not yet loaded\n    if (!isLoaded(this.props.profile) || !isLoaded(this.props.people)) {\n      return (<div>loading</div>)\n    }\n\n    var peopleList = (<p className='raleway center'>There are no people in your shelter yet! Add someone to make their holiday dreams come true!</p>)\n\n    const people = this.props.people;\n\n    if (people) {\n      peopleList =\n      Object.keys(people).map((uid, index) => {\n        return <ReceiverCard name={people[uid].name} bio={people[uid].bio} uid={uid} shelterid={this.props.uid}/>\n      });\n    }\n\n    return (\n      <>\n        <NavBar/>\n        <SubNavBar selected=\"people\"/>\n        <br/>\n        <p className='cinzel articleheadings peopleTitle center'>Welcome back {this.props.shelterName}!</p>\n        <CreateCard shelterName={this.props.shelterName} uid={this.props.uid}/>\n        <hr/>\n        <p className='cinzel articleheadings peopleTitle' style={{paddingLeft: '1em'}}>People:</p>\n        {peopleList}\n        <br/>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.firebase.auth.uid,\n    profile: state.firebase.data['profile'],\n    people: state.firebase.data['people'],\n  };\n};\n\nexport default compose(\n  firebaseConnect( props => {\n    const uid = props.uid;\n    return [\n      {path: `/users/${uid}`, storeAs: 'profile'},\n      {path: `/shelters/${uid}`, storeAs: 'people'},\n    ];\n  }),\n  connect(mapStateToProps))(ShelterAdminPeople);\n","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterAdminPayments/ShelterAdminPayments.js",["103","104","105","106"],"import React, {Component} from 'react';\nimport NavBar from '../Components/NavBar/NavBar.js';\nimport SubNavBar from '../Components/SubNavBar/SubNavBar.js';\nimport { Button } from 'react-bootstrap';\nimport GiftsReceived from '../Components/GiftsReceived/GiftsReceived.js';\nimport {Link, Redirect} from 'react-router-dom';\nimport './ShelterAdminPayments.css';\n\nimport {firebaseConnect, isLoaded, isEmpty} from 'react-redux-firebase'\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\n\nclass ShelterAdminPayments extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n  };\n}\n\n//under donationid; {item: itemname, cost: cost, recipientname: recipientname, message: message};\n\n  render() {\n    if (!this.props.uid) {\n      return <Redirect to=\"/\"/>;\n    }\n\n    // return loading screen if not yet loaded\n    if (!isLoaded(this.props.gifts)) {\n      return (<div>loading</div>)\n    }\n\n    const gifts = this.props.gifts;\n    var giftList = (<p className='raleway'>No gifts received yet.</p>)\n\n    if (gifts) {\n      giftList = []\n      Object.keys(gifts).map((donationId, donationindex) => {\n        var donation = gifts[donationId];\n        giftList.push(<React.Fragment><GiftsReceived item={donation.itemname} person={donation.recipientname} message={donation.message} money={donation.cost}/><br/></React.Fragment>)\n      })\n    }\n\n    return (\n      <>\n        <NavBar/>\n        <SubNavBar selected=\"payments\"/>\n        <div className=\"paymentInfo\">\n          <p className=\"headingText\">Gifts received</p>\n          {giftList}\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.firebase.auth.uid,\n    gifts: state.firebase.data['gifts'],\n  };\n};\n\nexport default compose(\n  firebaseConnect( props => {\n    const uid = props.uid;\n    return [\n      {path: `/donations/${uid}`, storeAs: 'gifts'},\n    ];\n  }),\n  connect(mapStateToProps))(ShelterAdminPayments);\n","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterLogin/ShelterLogin.js",["107"],"import React, {Component} from 'react';\nimport './ShelterLogin.css';\nimport { Form, Button } from 'react-bootstrap';\nimport {Redirect, Link} from 'react-router-dom';\nimport {firebaseConnect} from 'react-redux-firebase'\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport { Grid } from 'semantic-ui-react';\n\nclass ShelterLogin extends Component {\n  constructor(props) {\n    super(props);\n    //store user account info from text inputs\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  login = async () => {\n    console.log('login')\n    const credentials = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    try {\n      await this.props.firebase.login(credentials);\n    } catch (error) {\n      this.setState({error: error.message});\n    }\n  };\n\n  //key enter change handler\n  handleKeyPress = event => {\n    //enter\n    if (event.keyCode === 13) {\n      this.login();\n    }\n  }\n\n  //change handler\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value, error: ''});\n  }\n\n  //listens for key press\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  render() {\n    if (this.props.isLoggedIn) {\n      return <Redirect to=\"/dash\"/ >;\n    }\n\n    var disabled = !this.state.email.trim() || !this.state.password.trim()\n\n    return(\n\n\n      <div className=\"login raleway\">\n        <div className=\"area\" >\n          <div className=\"contentr\">\n            <div className='title cinzel'>\n            Secret Santa\n            </div>\n            <p style={{color: 'white'}}>Welcome Back!</p>\n              <div style={{color: 'red', fontWeight: 'bold', marginBottom: '1em'}}>{this.state.error}</div>\n              <div className=\"form\">\n                <Form>\n                  <Form.Group>\n                      <Form.Control name=\"email\" type=\"email\" placeholder=\"Email*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"password\" type=\"password\" placeholder=\"Enter Password*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Button variant=\"dark\" onClick={this.login} disabled={disabled}>\n                    Login\n                  </Button>\n                </Form>\n              </div>\n              <br/>\n              <Link className=\"to-login\" to=\"/register\">New Here? Register!</Link>\n          </div>\n        </div>\n      </div>\n      )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {isLoggedIn: state.firebase.auth.uid};\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps))(ShelterLogin);\n","/Users/jenniferguo/projects/secretsanta/src/Pages/ShelterRegister/ShelterRegister.js",["108"],"import React, {Component} from 'react';\nimport './ShelterRegister.css';\nimport {firebaseConnect} from 'react-redux-firebase'\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {Link, Redirect} from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { Grid } from 'semantic-ui-react';\n\nclass ShelterRegister extends Component {\n  constructor(props) {\n    super(props);\n    //store user account info from text inputs\n    this.state = {\n      shelterName: '',\n      city: '',\n      state: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n    };\n  }\n\n  //register account with firebase\n  register = async () => {\n    console.log('registering')\n    const credentials = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    const profile = {\n      shelterName: this.state.shelterName,\n      email: this.state.email,\n      city: this.state.city,\n      state: this.state.state,\n    }\n\n    try {\n      await this.props.firebase.createUser(credentials, profile);\n    }\n    catch (error) {\n      this.setState({error: error.message});\n    }\n  };\n\n  registerCheck = () => {\n    if ((this.state.password === this.state.passwordConfirm)\n      && this.state.shelterName.trim()\n      && this.state.city.trim()\n      && this.state.state.trim()\n      && this.state.email.trim()\n      && this.state.password.trim()) {\n      this.register();\n    }\n  }\n\n  //Event Change Handler Method for text inputs\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value, error: ''});\n  }\n\n\n  render() {\n    // if (this.props.isLoggedIn) {\n    //   return <Redirect to=\"/dash\" />\n    // }\n\n    //passwords do not match error message\n    if ((this.state.password !== this.state.passwordConfirm) && (this.state.passconfirm !== \"Passwords do not match.\")) {\n      this.setState({passconfirm: \"Passwords do not match.\"})\n    } else if (this.state.password === this.state.passwordConfirm && (this.state.passconfirm !== \"\")) {\n      this.setState({passconfirm: \"\"})\n    }\n\n    var disabled = !this.state.email.trim()\n    || !this.state.shelterName.trim()\n    || !this.state.state.trim()\n    || !this.state.city.trim()\n    || !this.state.password.trim()\n    || !this.state.passwordConfirm.trim()\n    || this.state.password !== this.state.passwordConfirm;\n\n    return(\n      <div className=\"register raleway\">\n        <div className=\"area\" >\n          <div className=\"contentr\">\n\n              <div className='title cinzel'>\n              Secret Santa\n              </div>\n              <p style={{color: 'white'}}>Register your shelter to start receiving holiday donations!</p>\n\n              <div style={{color: 'white', marginBottom: '1em'}}>{this.state.error}</div>\n              <div style={{color: 'white', marginBottom: '1em'}}>{this.state.passconfirm}</div>\n\n              <div className=\"form\">\n                <Form>\n                  <Form.Group>\n                      <Form.Control name=\"email\" type=\"email\" placeholder=\"Email*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"shelterName\" type=\"text\" placeholder=\"Shelter Name*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"city\" type=\"text\" placeholder=\"City*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"state\" type=\"text\" placeholder=\"State*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"password\" type=\"password\" placeholder=\"Enter Password*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control name=\"passwordConfirm\" type=\"password\" placeholder=\"Confirm Password*\" onChange={this.handleChange} required />\n                  </Form.Group>\n                  <Button variant=\"dark\" onClick={this.registerCheck} disabled={disabled}>\n                    Let's get started!\n                  </Button>\n                </Form>\n              </div>\n              <br/>\n              <Link className=\"to-login\" to=\"/login\">Already Registered? Login!</Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {isLoggedIn: state.firebase.auth.uid};\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps))(ShelterRegister);\n","/Users/jenniferguo/projects/secretsanta/src/Pages/Components/NavBar/NavBar.js",["109"],"import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './NavBar.css';\nimport logo from '../../../Images/logo.svg';\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport {firebaseConnect } from 'react-redux-firebase';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\n\nconst nav = (props) => {\n  const user = props.user;\n  if (user == 'giver') {\n    return (\n      <Navbar className=\"darkblue topbar raleway\" variant=\"light\" expand=\"lg\">\n        <Navbar.Brand><Link className='home' to='/'><img className=\"logoep\" src={logo} height='50em' alt='logo'/></Link></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Button variant='light'><Link className='home' to='/register' style={{color: 'black'}}>For Shelters</Link></Button>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n  else {\n    return(\n      <Navbar className=\"darkblue topbar raleway\" variant=\"light\" expand=\"lg\">\n        <Navbar.Brand><Link className='home' to='/home'><img className=\"logoep\" src={logo} height='50em' alt='logo'/></Link></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Button variant='light' onClick={() => props.firebase.logout()}>Logout</Button>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    isLoggedIn: state.firebase.auth.uid,\n    profile: state.firebase.profile\n  };\n}\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps))(nav);\n","/Users/jenniferguo/projects/secretsanta/src/Pages/ErrorPage/ErrorPage.js",[],"/Users/jenniferguo/projects/secretsanta/src/Pages/Components/SubNavBar/SubNavBar.js",["110","111","112","113"],"import React, { Component } from 'react';\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport './SubNavBar.css';\n\nclass SubNavBar extends Component {\n  render() {\n    if (this.props.selected == \"people\") {\n      return (\n        <div>\n          <div className=\"notSelectedBar  selectedBar\">\n            <Link className=\"navText\" to=\"/shelterAdminPeople\">People</Link>\n          </div>\n          <div className=\"notSelectedBar\">\n          <Link to=\"/shelterAdminPayments\" className=\"navText\">Payments & Financial Info</Link>\n          </div>\n        </div>\n      )\n    }\n    return(\n      <div>\n        <div className=\"notSelectedBar navText\">\n          <Link className=\"navText\" to=\"/shelterAdminPeople\">People</Link>\n        </div>\n        <div className=\"notSelectedBar selectedBar\">\n          <Link to=\"/shelterAdminPayments\" className=\"navText\">Payments & Financial Info</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SubNavBar;\n","/Users/jenniferguo/projects/secretsanta/src/Pages/Components/GiftsReceived/GiftsReceived.js",[],"/Users/jenniferguo/projects/secretsanta/src/Pages/Components/CreateCard/CreateCard.js",["114","115"],"import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport '../ReceiverCard/ReceiverCard.css';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport './CreateCard.css';\n\nimport {firebaseConnect} from 'react-redux-firebase';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\n\nclass CreateCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      bio: '',\n      wishlist: [],\n      itemName: '',\n      itemLink: '',\n      itemCost: '',\n    };\n  }\n\n  //change handler\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value, error: ''});\n  }\n\n  addItem = () => {\n    if (this.state.itemName.trim() && this.state.itemLink.trim() && this.state.itemCost.trim()) {\n      const newItem = {name: this.state.itemName, link: this.state.itemLink, cost: this.state.itemCost};\n      const wishlist = this.state.wishlist.slice().concat(newItem);\n      //add to state and reset state\n      this.setState({wishlist, itemName: '', itemLink: '', itemCost: ''})\n    }\n  }\n\n  addPerson = () => {\n    if (this.state.firstName.trim() && this.state.bio.trim() && (this.state.wishlist.length > 0)){\n      const personId = this.props.firebase.push(`/shelters/${this.props.uid}`).key;\n      const newPerson = {name: this.state.firstName, bio: this.state.bio, wishlist: this.state.wishlist};\n      const onComplete = () => {\n        console.log('New Person Added');\n        this.setState({firstName: '', bio: '', wishlist: []})\n      }\n      const updates = {};\n      updates[`/shelters/${this.props.uid}/${personId}`] = newPerson;\n      this.props.firebase.update(`/`, updates, onComplete);\n    }\n\n  }\n\n  render() {\n    const disabledItem = !this.state.itemName.trim() || !this.state.itemLink.trim() || !this.state.itemCost.trim();\n\n    const disabledPerson = !this.state.firstName.trim() || !this.state.bio.trim() || (this.state.wishlist.length == 0);\n\n    var wishlist = (<p className='raleway'>No wishes yet! Add an item!</p>)\n\n    if (this.state.wishlist.length > 0) {\n      wishlist =\n      (\n        <table className='raleway'>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Link</th>\n              <th>Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.wishlist.map((item, index) => {\n              return (\n                <tr key={index}>\n                  <td>{item.name}</td>\n                  <td><a href={item.link}>{item.link}</a></td>\n                  <td>{item.cost}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      )\n    }\n\n    return (\n      <>\n        <Card bg='light' className='receivercard'>\n          <Row>\n            <Col>\n              <Card.Body>\n              <p className='cinzel articleheadings'>Personal Info</p>\n                <Form>\n                  <Form.Group className='raleway'>\n                    <Form.Control name='firstName' onChange={this.handleChange} required type='textarea' value={this.state.firstName} placeholder=\"First Name\"/>\n                  </Form.Group>\n                  <Form.Group className='raleway'>\n                    <Form.Control name='bio' onChange={this.handleChange} required type=\"textarea\" value={this.state.bio} placeholder=\"Bio\"/>\n                  </Form.Group>\n                  <p className='cinzel articleheadings'>Wishlist</p>\n                  {wishlist}\n                  <p className='cinzel articleheadings'>Add Item</p>\n                  <Row>\n                    <Col>\n                      <Form.Group className='raleway'>\n                        <Form.Control name='itemName' onChange={this.handleChange} type='textarea' value={this.state.itemName} placeholder=\"Item\"/>\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group className='raleway'>\n                        <Form.Control name='itemLink' onChange={this.handleChange} type='textarea' value={this.state.itemLink} placeholder=\"Link to Item\"/>\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group className='raleway'>\n                        <Form.Control name='itemCost' onChange={this.handleChange} type='textarea' value={this.state.itemCost} placeholder=\"Cost of Item in $\"/>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <Button variant='primary' className=\"addButton\" onClick={this.addItem} disabled={disabledItem}>Add item</Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </Card.Body>\n            </Col>\n          </Row>\n        </Card>\n        <Button variant='primary' className=\"addButton personButton\" onClick={this.addPerson} disabled={disabledPerson}>Add New Person</Button>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {isLoggedIn: state.firebase.auth.uid};\n};\n\nexport default compose(firebaseConnect(), connect(mapStateToProps))(CreateCard);\n","/Users/jenniferguo/projects/secretsanta/src/Pages/Payments/Payments.js",["116","117","118","119","120"],"/Users/jenniferguo/projects/secretsanta/src/Pages/PaymentResult/PaymentResult.js",["121","122","123","124","125","126","127"],"import React, {Component} from 'react';\nimport './PaymentResult.css';\nimport { Card, Button } from 'react-bootstrap';\nimport {Redirect, Link} from 'react-router-dom';\nimport {firebaseConnect} from 'react-redux-firebase'\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport { Grid } from 'semantic-ui-react';\nimport NavBar from '../Components/NavBar/NavBar';\nimport penguin from '../../Images/penguin.svg'\nimport ReceiverCard from '../Components/ReceiverCard/ReceiverCard';\n\nclass PaymentResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    };\n\n    render () {\n        return(\n            <>\n                <div>\n                    <NavBar user = 'giver'/>\n                </div>\n                <br/>\n                <div className = \"backbutton\">\n                    <Button variant = \"light\" size = \"lg\"><Link className = \"cinzel\" to =  \"/\" style = {{color: \"black\"}}>Back</Link></Button>\n                </div>\n                <div className = \"cutepenguin\">\n                    <img src = {penguin} height = '250em'/>\n                </div>\n                <div className = \"paymentresult\">\n                    <Card>\n                        <Card.Body>\n                            <h1 className = 'paymenttext cinzel'>Thank you for your donation!</h1>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default PaymentResult;","/Users/jenniferguo/projects/secretsanta/src/Pages/ViewProfile/ViewProfile.js",["128","129","130","131","132","133"],"import React, { Component } from 'react';\nimport './ViewProfile.css';\nimport '../Payments/Payments.css';\nimport NavBar from '../Components/NavBar/NavBar.js';\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap';\nimport {Redirect, Link, withRouter} from 'react-router-dom';\nimport pic0 from './../../Images/snowman.svg';\nimport pic1 from './../../Images/penguin.svg';\nimport pic2 from './../../Images/reindeer.svg';\nimport pic3 from './../../Images/nutcracker.svg';\nimport {firebaseConnect, isLoaded, isEmpty} from 'react-redux-firebase';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\n\nclass ViewProfile extends Component {\n  constructor(props) {\n  super(props);\n  //store user account info from text inputs\n  this.state = {\n    itemName: '',\n    itemCost: '',\n  };\n}\n\n//should receive as props:\n//shelter name (this.props.shelterid), userid (this.props.recipientid), (this.props.profile.name), item, cost\n\n//change handler\nhandleChange = event => {\n  this.setState({ itemCost: event.target.value, itemName: event.target.name});\n}\n\nmakePayment = () => {\n  const recipientid = this.props.match.params.recipientid;\n  const shelterid = this.props.match.params.shelterid;\n  this.props.history.push({\n    pathname: `/payments/${shelterid}/${recipientid}/${this.props.profile.name}/${this.state.itemName}/${this.state.itemCost}`\n  });\n}\n\n  render(){\n\n    if (!isLoaded(this.props.profile)) {\n      return <div>Loading...</div>\n    }\n\n    const arr = [pic0, pic1, pic2, pic3];\n    const rand = Math.floor(Math.random() * Math.floor(4));\n    const img = arr[rand];\n\n    var wishlist = <p className='raleway'>No wishes yet!</p>\n\n    const wishes = this.props.profile.wishlist;\n    if (wishes) {\n      wishlist = []\n      wishes.forEach((item, index) => {\n        wishlist.push(<Form.Check name={item.name} value={item.cost} onChange={this.handleChange} type='radio' id='inline-radio-q1a' label={`${item.name} for $${item.cost}`}/>)\n      })\n    }\n\n    return(\n      <>\n      <NavBar />\n\n        <div className=\"textDiv\">\n        <Button variant=\"light\" size=\"lg\"><Link className=\"cinzel backToProfile\" to=\"/\" style={{color: \"black\"}}>Back</Link></Button>\n          <br></br>\n          <img src={img} style={{borderRadius: '50%', width: '10em', outline: '2px solid black'}} className=\"profPic\"/>\n          <p className=\"itemTitle\">{this.props.profile.name}</p>\n          <p className=\"profBio\">{this.props.profile.bio}</p>\n          <p className=\"itemTitle\">Wishlist</p>\n          <Form>\n            <Form.Group>\n              {wishlist}\n            </Form.Group>\n          </Form>\n          <Button onClick={this.makePayment} disabled={!this.state.itemName.trim() || !this.state.itemCost.trim()} variant=\"dark\" size=\"lg\" className=\"purchaseButton\">Purchase Items</Button>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.firebase.auth.uid,\n    profile: state.firebase.data['profile'],\n  };\n};\n\nexport default compose(\n  withRouter,\n  firebaseConnect( props => {\n    const recipientid = props.match.params.recipientid;\n    const shelterid = props.match.params.shelterid;\n    return [\n      {path: `/shelters/${shelterid}/${recipientid}`, storeAs: 'profile'},\n    ];\n  }),\n  connect(mapStateToProps))(ViewProfile);\n",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":14},{"ruleId":"138","severity":1,"message":"142","line":5,"column":16,"nodeType":"140","messageId":"141","endLine":5,"endColumn":22},{"ruleId":"138","severity":1,"message":"143","line":6,"column":9,"nodeType":"140","messageId":"141","endLine":6,"endColumn":17},{"ruleId":"138","severity":1,"message":"144","line":6,"column":19,"nodeType":"140","messageId":"141","endLine":6,"endColumn":23},{"ruleId":"138","severity":1,"message":"145","line":7,"column":36,"nodeType":"140","messageId":"141","endLine":7,"endColumn":43},{"ruleId":"138","severity":1,"message":"146","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":37,"column":59,"nodeType":"149","messageId":"150","endLine":37,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":39,"column":58,"nodeType":"149","messageId":"150","endLine":39,"endColumn":60},{"ruleId":"138","severity":1,"message":"151","line":9,"column":9,"nodeType":"140","messageId":"141","endLine":9,"endColumn":24},{"ruleId":"138","severity":1,"message":"152","line":10,"column":9,"nodeType":"140","messageId":"141","endLine":10,"endColumn":16},{"ruleId":"138","severity":1,"message":"153","line":11,"column":9,"nodeType":"140","messageId":"141","endLine":11,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":29,"column":11,"nodeType":"156","endLine":29,"endColumn":87},{"ruleId":"138","severity":1,"message":"157","line":46,"column":7,"nodeType":"140","messageId":"141","endLine":46,"endColumn":22},{"ruleId":"138","severity":1,"message":"144","line":6,"column":9,"nodeType":"140","messageId":"141","endLine":6,"endColumn":13},{"ruleId":"138","severity":1,"message":"145","line":7,"column":36,"nodeType":"140","messageId":"141","endLine":7,"endColumn":43},{"ruleId":"138","severity":1,"message":"142","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":16},{"ruleId":"138","severity":1,"message":"144","line":6,"column":9,"nodeType":"140","messageId":"141","endLine":6,"endColumn":13},{"ruleId":"138","severity":1,"message":"145","line":9,"column":36,"nodeType":"140","messageId":"141","endLine":9,"endColumn":43},{"ruleId":"147","severity":1,"message":"148","line":37,"column":58,"nodeType":"149","messageId":"150","endLine":37,"endColumn":60},{"ruleId":"138","severity":1,"message":"146","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":14},{"ruleId":"138","severity":1,"message":"146","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":12,"column":12,"nodeType":"160","messageId":"161","endLine":12,"endColumn":14},{"ruleId":"138","severity":1,"message":"162","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":16},{"ruleId":"138","severity":1,"message":"163","line":2,"column":18,"nodeType":"140","messageId":"141","endLine":2,"endColumn":21},{"ruleId":"138","severity":1,"message":"142","line":2,"column":23,"nodeType":"140","messageId":"141","endLine":2,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":9,"column":29,"nodeType":"160","messageId":"161","endLine":9,"endColumn":31},{"ruleId":"138","severity":1,"message":"144","line":2,"column":9,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"158","severity":1,"message":"159","line":56,"column":114,"nodeType":"160","messageId":"161","endLine":56,"endColumn":116},{"ruleId":"138","severity":1,"message":"164","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":20},{"ruleId":"138","severity":1,"message":"165","line":5,"column":24,"nodeType":"140","messageId":"141","endLine":5,"endColumn":27},{"ruleId":"138","severity":1,"message":"166","line":5,"column":34,"nodeType":"140","messageId":"141","endLine":5,"endColumn":38},{"ruleId":"138","severity":1,"message":"145","line":7,"column":36,"nodeType":"140","messageId":"141","endLine":7,"endColumn":43},{"ruleId":"138","severity":1,"message":"146","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":14},{"ruleId":"138","severity":1,"message":"143","line":4,"column":9,"nodeType":"140","messageId":"141","endLine":4,"endColumn":17},{"ruleId":"138","severity":1,"message":"151","line":5,"column":9,"nodeType":"140","messageId":"141","endLine":5,"endColumn":24},{"ruleId":"138","severity":1,"message":"152","line":6,"column":9,"nodeType":"140","messageId":"141","endLine":6,"endColumn":16},{"ruleId":"138","severity":1,"message":"153","line":7,"column":9,"nodeType":"140","messageId":"141","endLine":7,"endColumn":16},{"ruleId":"138","severity":1,"message":"146","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":14},{"ruleId":"138","severity":1,"message":"164","line":11,"column":8,"nodeType":"140","messageId":"141","endLine":11,"endColumn":20},{"ruleId":"154","severity":1,"message":"155","line":32,"column":21,"nodeType":"156","endLine":32,"endColumn":60},{"ruleId":"138","severity":1,"message":"165","line":5,"column":24,"nodeType":"140","messageId":"141","endLine":5,"endColumn":27},{"ruleId":"138","severity":1,"message":"167","line":5,"column":29,"nodeType":"140","messageId":"141","endLine":5,"endColumn":32},{"ruleId":"138","severity":1,"message":"166","line":5,"column":34,"nodeType":"140","messageId":"141","endLine":5,"endColumn":38},{"ruleId":"138","severity":1,"message":"143","line":6,"column":9,"nodeType":"140","messageId":"141","endLine":6,"endColumn":17},{"ruleId":"138","severity":1,"message":"145","line":11,"column":36,"nodeType":"140","messageId":"141","endLine":11,"endColumn":43},{"ruleId":"154","severity":1,"message":"155","line":68,"column":11,"nodeType":"156","endLine":68,"endColumn":120},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'isEmpty' is defined but never used.","'Grid' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'firebaseConnect' is defined but never used.","'connect' is defined but never used.","'compose' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'mapStateToProps' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Navbar' is defined but never used.","'Nav' is defined but never used.","'ReceiverCard' is defined but never used.","'Row' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]